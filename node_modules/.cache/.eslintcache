[{"/Users/salmaelkasri/Desktop/postapp/client/src/index.js":"1","/Users/salmaelkasri/Desktop/postapp/client/src/App.js":"2","/Users/salmaelkasri/Desktop/postapp/client/src/reportWebVitals.js":"3","/Users/salmaelkasri/Desktop/postapp/client/src/pages/Home.js":"4","/Users/salmaelkasri/Desktop/postapp/client/src/pages/CreatePost.js":"5","/Users/salmaelkasri/Desktop/postapp/client/src/pages/Post.js":"6","/Users/salmaelkasri/Desktop/postapp/client/src/pages/Registration.js":"7","/Users/salmaelkasri/Desktop/postapp/client/src/pages/Login.js":"8","/Users/salmaelkasri/Desktop/postapp/client/src/helpers/AuthContext.js":"9"},{"size":513,"mtime":1692338770562,"results":"10","hashOfConfig":"11"},{"size":3218,"mtime":1693464246415,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1692338706778,"results":"13","hashOfConfig":"11"},{"size":4728,"mtime":1693464272452,"results":"14","hashOfConfig":"11"},{"size":1888,"mtime":1693464262583,"results":"15","hashOfConfig":"11"},{"size":4877,"mtime":1693464296442,"results":"16","hashOfConfig":"11"},{"size":1493,"mtime":1693464301034,"results":"17","hashOfConfig":"11"},{"size":1504,"mtime":1693464282697,"results":"18","hashOfConfig":"11"},{"size":82,"mtime":1692953097137,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"bix6ka",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/salmaelkasri/Desktop/postapp/client/src/index.js",[],[],[],"/Users/salmaelkasri/Desktop/postapp/client/src/App.js",["49"],[],"//Imports\nimport React, { useEffect } from \"react\";\nimport Home from \"./pages/Home\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link, Routes } from \"react-router-dom\";\nimport CreatePost from \"./pages/CreatePost\";\nimport Post from \"./pages/Post\";\nimport Login from \"./pages/Login\";\nimport Registration from \"./pages/Registration\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n//Main functions\nfunction App() {\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: 0,\n    status: false,\n  });\n  //authState:Status of user (logged in or no)\n  //setAuthState: Helps use to change the status of user\n  //Status initialized as NOT LOGGED IN\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3004/auth/validate\", {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then((response) => {\n        if (response.data.error) {\n          setAuthState({\n            ...authState,\n            status: false,\n          });\n        } else {\n          setAuthState({\n            username: response.data.username,\n            id: response.data.id,\n            status: true,\n          });\n        }\n      });\n  }, [authState.status]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"accessToken\");\n    setAuthState({\n      ...authState,\n      status: false,\n    });\n  };\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Router>\n          <div className=\"linkDiv\">\n            {/* (true) && (true) */}\n            {/* (false) && (false) */}\n            {!authState.status && (\n              <>\n                {\" \"}\n                <Link to=\"/login\" className=\"Link\">\n                  Login\n                </Link>\n                <Link to=\"/registration\" className=\"Link\">\n                  Registration\n                </Link>\n              </>\n            )}\n            {authState.status && (\n              <>\n                <div className=\"menu\">\n                  <div className=\"leftSection\">\n                    <Link to=\"/createpost\" className=\"Link\">\n                      Create A Post\n                    </Link>\n\n                    <Link className=\"Link\" to=\"/\">\n                      Home Page\n                    </Link>\n                    <Link className=\"Link\" onClick={handleLogout} to=\"/login\">\n                      Log Out\n                    </Link>\n                  </div>\n                  <div className=\"introductionProfile\">\n                    <span className=\"menuImage\"></span>\n                    <div className=\"menuUsername\">{authState.username}</div>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/createpost\" element={<CreatePost />} />\n            <Route path=\"/post/:id\" element={<Post />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/registration\" element={<Registration />} />\n          </Routes>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\nexport default App;\n","/Users/salmaelkasri/Desktop/postapp/client/src/reportWebVitals.js",[],[],"/Users/salmaelkasri/Desktop/postapp/client/src/pages/Home.js",[],[],"/Users/salmaelkasri/Desktop/postapp/client/src/pages/CreatePost.js",[],[],"/Users/salmaelkasri/Desktop/postapp/client/src/pages/Post.js",[],[],"/Users/salmaelkasri/Desktop/postapp/client/src/pages/Registration.js",[],[],"/Users/salmaelkasri/Desktop/postapp/client/src/pages/Login.js",[],[],"/Users/salmaelkasri/Desktop/postapp/client/src/helpers/AuthContext.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":43,"column":6,"nodeType":"52","endLine":43,"endColumn":24,"suggestions":"53"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["54"],{"desc":"55","fix":"56"},"Update the dependencies array to be: [authState, authState.status]",{"range":"57","text":"58"},[1246,1264],"[authState, authState.status]"]