{"ast":null,"code":"var _jsxFileName = \"/Users/salmaelkasri/Desktop/postapp/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  let navigate = useNavigate();\n  const {\n    authState\n  } = useContext(AuthContext);\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3004/posts\").then(response => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  const deletePost = postId => {\n    axios.delete(`http://localhost:3004/posts/${postId}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.filter(val => {\n        return val.id !== postId;\n      }));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const likeOrUnlikePost = postId => {\n    axios.post(\"http://localhost:3004/likes\", {\n      PostId: postId\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.map(post => {\n        if (post.id == postId) {\n          if (response.data.liked) {\n            return {\n              ...post,\n              Likes: [...post.Likes, 0]\n            };\n          } else {\n            const likesArray = post.Likes;\n            likesArray.pop();\n            return {\n              ...post,\n              Likes: likesArray\n            };\n          }\n        }\n      }));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return (\n    /*#__PURE__*/\n    //你看这是JSX code the return of divs in javascript code\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: [...listOfPosts].reverse().map((value, key) => {\n        return (\n          /*#__PURE__*/\n          //basic html code\n          _jsxDEV(\"div\", {\n            className: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upperPost\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postData\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title\",\n                  children: value.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"username\",\n                  children: value.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    navigate(`/post/${value.id}`);\n                  },\n                  className: \"seePostButton\",\n                  children: \"See Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postText\",\n              children: value.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: value.createdAt.slice(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this), authState.username === value.username && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deletePost(value.id);\n              },\n              className: \"deleteButton\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"likeButton\",\n              onClick: () => {\n                likeOrUnlikePost(value.id);\n              },\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), value.Likes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Home, \"IH/T8mseT28HaecHRJRKXuxjP9I=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","axios","useEffect","useState","useNavigate","useContext","AuthContext","jsxDEV","_jsxDEV","Home","_s","navigate","authState","listOfPosts","setListOfPosts","get","then","response","data","deletePost","postId","delete","headers","accessToken","localStorage","getItem","filter","val","id","catch","error","console","log","likeOrUnlikePost","post","PostId","map","liked","Likes","likesArray","pop","className","children","reverse","value","key","fileName","_jsxFileName","lineNumber","columnNumber","title","username","onClick","postText","createdAt","slice","length","_c","$RefreshReg$"],"sources":["/Users/salmaelkasri/Desktop/postapp/client/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nfunction Home() {\n  let navigate = useNavigate();\n  const { authState } = useContext(AuthContext);\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3004/posts\").then((response) => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  const deletePost = (postId) => {\n    axios\n      .delete(`http://localhost:3004/posts/${postId}`, {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then((response) => {\n        setListOfPosts(\n          listOfPosts.filter((val) => {\n            return val.id !== postId;\n          })\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const likeOrUnlikePost = (postId)=>{\n    axios\n    .post(\"http://localhost:3004/likes\",{PostId:postId},{headers:{\n      accessToken:localStorage.getItem(\"accessToken\")\n    }})\n    .then((response)=>{\n      setListOfPosts(listOfPosts.map((post)=>{\n        if(post.id==postId){\n          if(response.data.liked){\n            return {...post,Likes:[...post.Likes,0]};\n          }else{\n            const likesArray = post.Likes;\n            likesArray.pop();\n            return {...post,Likes:likesArray}\n          }\n        }\n      }))\n    })\n    .catch((error)=>{\n      console.log(error);\n    })\n  }\n  return (\n    //你看这是JSX code the return of divs in javascript code\n    <div className=\"container\">\n      {[...listOfPosts].reverse().map((value, key) => {\n        return (\n          //basic html code\n          <div className=\"post\">\n            <div className=\"upperPost\">\n              <div>\n                <span className=\"image\"></span>\n              </div>\n              <div className=\"postData\">\n                <div className=\"title\">{value.title}</div>\n                <div className=\"username\">{value.username}</div>\n                <button\n                  onClick={() => {\n                    navigate(`/post/${value.id}`);\n                  }}\n                  className=\"seePostButton\"\n                >\n                  See Post\n                </button>\n              </div>\n            </div>\n            <div className=\"postText\">{value.postText}</div>\n            <div className=\"time\">{value.createdAt.slice(0, 10)}</div>\n            {authState.username === value.username && (\n              <button\n                onClick={() => {\n                  deletePost(value.id);\n                }}\n                className=\"deleteButton\"\n              >\n                Delete\n              </button>\n            )}\n            <button className=\"likeButton\" onClick={()=>{\n              likeOrUnlikePost(value.id);\n            }}>Like</button>\n            {value.Likes.length}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}