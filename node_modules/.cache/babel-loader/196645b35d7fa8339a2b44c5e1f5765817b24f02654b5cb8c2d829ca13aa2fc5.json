{"ast":null,"code":"var _jsxFileName = \"/Users/salmaelkasri/Desktop/postapp/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  let history = useNavigate();\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3004/posts\").then(response => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    //你看这是JSX code the return of divs in javascript code\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: listOfPosts.map((value, key) => {\n        return (\n          /*#__PURE__*/\n          //basic html code\n          _jsxDEV(\"div\", {\n            className: \"post\",\n            onClick: () => history.push(`/post/${value.id}`),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upperPost\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postData\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title\",\n                  children: value.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"username\",\n                  children: value.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postText\",\n              children: value.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: value.createdAt.slice(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Home, \"WFGNqOwbNRza+NPDq7+UO0w12aw=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","axios","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Home","_s","history","listOfPosts","setListOfPosts","get","then","response","data","className","children","map","value","key","onClick","push","id","fileName","_jsxFileName","lineNumber","columnNumber","title","username","postText","createdAt","slice","_c","$RefreshReg$"],"sources":["/Users/salmaelkasri/Desktop/postapp/client/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Home() {\n  let history = useNavigate();\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3004/posts\").then((response) => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  return (\n    //你看这是JSX code the return of divs in javascript code\n    <div className=\"container\">\n      {listOfPosts.map((value, key) => {\n        return (\n          //basic html code\n          <div className=\"post\" onClick={()=>history.push(`/post/${value.id}`)}>\n            <div className=\"upperPost\">\n              <div>\n                <span className=\"image\"></span>\n              </div>\n              <div className=\"postData\">\n                <div className=\"title\">{value.title}</div>\n                <div className=\"username\">{value.username}</div>\n              </div>\n            </div>\n            <div className=\"postText\">{value.postText}</div>\n            <div className=\"time\">{value.createdAt.slice(0, 10)}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,IAAIC,OAAO,GAAGL,WAAW,CAAC,CAAC;EAC3B;EACA;EACA,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClDD,SAAS,CAAC,MAAM;IACd;IACA;IACAD,KAAK,CAACW,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC1DH,cAAc,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;IAAA;IACE;IACAT,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBP,WAAW,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;QAC/B;UAAA;UACE;UACAd,OAAA;YAAKU,SAAS,EAAC,MAAM;YAACK,OAAO,EAAEA,CAAA,KAAIZ,OAAO,CAACa,IAAI,CAAE,SAAQH,KAAK,CAACI,EAAG,EAAC,CAAE;YAAAN,QAAA,gBACnEX,OAAA;cAAKU,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBX,OAAA;gBAAAW,QAAA,eACEX,OAAA;kBAAMU,SAAS,EAAC;gBAAO;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACNrB,OAAA;gBAAKU,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACvBX,OAAA;kBAAKU,SAAS,EAAC,OAAO;kBAAAC,QAAA,EAAEE,KAAK,CAACS;gBAAK;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC1CrB,OAAA;kBAAKU,SAAS,EAAC,UAAU;kBAAAC,QAAA,EAAEE,KAAK,CAACU;gBAAQ;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNrB,OAAA;cAAKU,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAEE,KAAK,CAACW;YAAQ;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChDrB,OAAA;cAAKU,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAEE,KAAK,CAACY,SAAS,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD;QAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;AAEV;AAACnB,EAAA,CAnCQD,IAAI;EAAA,QACGH,WAAW;AAAA;AAAA6B,EAAA,GADlB1B,IAAI;AAoCb,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}