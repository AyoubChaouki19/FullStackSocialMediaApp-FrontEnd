{"ast":null,"code":"var _jsxFileName = \"/Users/salmaelkasri/Desktop/postapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//the 'useState' hook allows us to create variables that can hold data and be updated overtime\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3001/posts\").then(response => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    //你看这是JSX code the return of divs in javascript code\n    _jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: listOfPosts.map((value, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"ZyY2K4nUIKHDSQV7yalHotozivI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","App","_s","listOfPosts","setListOfPosts","get","then","response","data","className","children","map","value","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/salmaelkasri/Desktop/postapp/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//the 'useState' hook allows us to create variables that can hold data and be updated overtime\nfunction App() {\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3001/posts\").then((response) => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  return (\n    //你看这是JSX code the return of divs in javascript code\n    <div className=\"body\">\n      <div className=\"container\">\n        {listOfPosts.map((value, key) => {\n          return <div className=\"post\"></div>;\n        })}\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClDD,SAAS,CAAC,MAAM;IACd;IACA;IACAD,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC1DH,cAAc,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;IAAA;IACE;IACAR,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBV,OAAA;QAAKS,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBP,WAAW,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;UAC/B,oBAAOb,OAAA;YAAKS,SAAS,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QACrC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV;AAACf,EAAA,CArBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}