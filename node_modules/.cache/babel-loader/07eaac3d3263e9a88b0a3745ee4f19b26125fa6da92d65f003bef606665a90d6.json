{"ast":null,"code":"var _jsxFileName = \"/Users/salmaelkasri/Desktop/postapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//the 'useState' hook allows us to create variables that can hold data and be updated overtime\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3001/posts\").then(response => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    //你看这是JSX code the return of divs in javascript code\n    _jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: listOfPosts.map((value, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upperPost\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postData\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title\",\n                  children: value.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"username\",\n                  children: value.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postText\",\n              children: value.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: value.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"ZyY2K4nUIKHDSQV7yalHotozivI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","axios","useEffect","useState","jsxDEV","_jsxDEV","App","_s","listOfPosts","setListOfPosts","get","then","response","data","className","children","map","value","key","src","fileName","_jsxFileName","lineNumber","columnNumber","title","username","postText","createdAt","_c","$RefreshReg$"],"sources":["/Users/salmaelkasri/Desktop/postapp/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//the 'useState' hook allows us to create variables that can hold data and be updated overtime\nfunction App() {\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3001/posts\").then((response) => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  return (\n    //你看这是JSX code the return of divs in javascript code\n    <div className=\"body\">\n      <div className=\"container\">\n        {listOfPosts.map((value, key) => {\n          return (\n            <div className=\"post\">\n              <div className=\"upperPost\">\n                <img src=\"/\"></img>\n                <div className=\"postData\">\n                <div className=\"title\">{value.title}</div>\n                <div className=\"username\">{value.username}</div>\n                </div>\n              </div>\n              <div className=\"postText\">{value.postText}</div>\n              <div className=\"time\">{value.createdAt}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClDD,SAAS,CAAC,MAAM;IACd;IACA;IACAD,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC1DH,cAAc,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;IAAA;IACE;IACAR,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBV,OAAA;QAAKS,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBP,WAAW,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;UAC/B,oBACEb,OAAA;YAAKS,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBV,OAAA;cAAKS,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBV,OAAA;gBAAKc,GAAG,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACnBlB,OAAA;gBAAKS,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACzBV,OAAA;kBAAKS,SAAS,EAAC,OAAO;kBAAAC,QAAA,EAAEE,KAAK,CAACO;gBAAK;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC1ClB,OAAA;kBAAKS,SAAS,EAAC,UAAU;kBAAAC,QAAA,EAAEE,KAAK,CAACQ;gBAAQ;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNlB,OAAA;cAAKS,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAEE,KAAK,CAACS;YAAQ;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChDlB,OAAA;cAAKS,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAEE,KAAK,CAACU;YAAS;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV;AAAChB,EAAA,CAjCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}