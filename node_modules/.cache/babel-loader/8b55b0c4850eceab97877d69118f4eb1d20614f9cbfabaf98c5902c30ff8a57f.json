{"ast":null,"code":"var _jsxFileName = \"/Users/salmaelkasri/Desktop/postapp/client/src/pages/Post.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [listComment, setComments] = useState([]);\n  const [postObject, setPostObject] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:3004/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3004/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  });\n  const userComment = {\n    commentBody: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    commentBody: Yup.string().required()\n  });\n  const addCommentSubmit = () => {\n    axios.post(\"http://localhost:3004/comments\", {}).then(response => {\n      console.log(\"comment added with success\");\n    });\n  };\n  return (\n    /*#__PURE__*/\n    //basic html code\n    _jsxDEV(\"div\", {\n      className: \"pagePost\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postOnPostPage\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperPost\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postData\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: postObject.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: postObject.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postText\",\n          children: postObject.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), postObject && postObject.createdAt && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: postObject.createdAt.slice(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments\",\n          children: listComment.map((value, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment\",\n              children: value.commentBody\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addComment\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: userComment,\n            onSubmit: addCommentSubmit,\n            validationSchema: validationSchema,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                id: \"inputComment\",\n                name: \"commentBody\",\n                placeholder: \"Comment on post...\",\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Add Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Post, \"5tdsbH1PTqYpGAVcMNLeIMAhX9s=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useParams","axios","useState","useEffect","Formik","Form","Field","Yup","jsxDEV","_jsxDEV","Post","_s","id","listComment","setComments","postObject","setPostObject","get","then","response","data","userComment","commentBody","validationSchema","object","shape","string","required","addCommentSubmit","post","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","username","postText","createdAt","slice","map","value","key","initialValues","onSubmit","name","placeholder","autocomplete","type","_c","$RefreshReg$"],"sources":["/Users/salmaelkasri/Desktop/postapp/client/src/pages/Post.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nfunction Post() {\n  let { id } = useParams();\n  const [listComment, setComments] = useState([]);\n  const [postObject, setPostObject] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:3004/posts/byId/${id}`).then((response) => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3004/comments/${id}`).then((response) => {\n      setComments(response.data);\n    });\n  });\n  const userComment = {\n    commentBody: \"\",\n  };\n  const validationSchema = Yup.object().shape({\n    commentBody: Yup.string().required(),\n  });\n  const addCommentSubmit = () => {\n    axios.post(\"http://localhost:3004/comments\", {}).then((response) => {\n      console.log(\"comment added with success\");\n    });\n  };\n  return (\n    //basic html code\n    <div className=\"pagePost\">\n      <div className=\"postOnPostPage\">\n        <div className=\"upperPost\">\n          <div>\n            <span className=\"image\"></span>\n          </div>\n          <div className=\"postData\">\n            <div className=\"title\">{postObject.title}</div>\n            <div className=\"username\">{postObject.username}</div>\n          </div>\n        </div>\n        <div className=\"postText\">{postObject.postText}</div>\n        {postObject && postObject.createdAt && (\n          <div className=\"time\">{postObject.createdAt.slice(0, 10)}</div>\n        )}\n      </div>\n      <div className=\"commentSection\">\n        <div className=\"comments\">\n          {listComment.map((value, key) => {\n            return (<div key={key} className=\"comment\">{value.commentBody}</div>);\n          })}\n        </div>\n        <div className=\"addComment\">\n          <Formik\n            initialValues={userComment}\n            onSubmit={addCommentSubmit}\n            validationSchema={validationSchema}\n          >\n            <Form className=\"form\">\n              <Field\n                id=\"inputComment\"\n                name=\"commentBody\"\n                placeholder=\"Comment on post...\"\n                autocomplete=\"off\"\n              />\n              <button type=\"submit\">Add Comment</button>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Post;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}