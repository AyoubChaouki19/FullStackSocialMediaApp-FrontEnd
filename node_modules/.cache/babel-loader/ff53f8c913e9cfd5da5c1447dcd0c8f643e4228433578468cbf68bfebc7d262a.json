{"ast":null,"code":"var _jsxFileName = \"/Users/salmaelkasri/Desktop/postapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//the 'useState' hook allows us to create variables that can hold data and be updated overtime\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3001/posts\").then(res => console.log(res));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: listOfPosts.map((value, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZyY2K4nUIKHDSQV7yalHotozivI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","App","_s","listOfPosts","setListOfPosts","get","then","res","console","log","className","children","map","value","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/salmaelkasri/Desktop/postapp/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//the 'useState' hook allows us to create variables that can hold data and be updated overtime\nfunction App() {\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3001/posts\").then((res) => console.log(res));\n  }, []);\n  return (\n    <div className=\"App\">\n        {listOfPosts.map((value,key)=>{\n            return <div>{}</div>\n        })}\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClDD,SAAS,CAAC,MAAM;IACd;IACA;IACAD,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EAC1E,CAAC,EAAE,EAAE,CAAC;EACN,oBACEP,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,EACfR,WAAW,CAACS,GAAG,CAAC,CAACC,KAAK,EAACC,GAAG,KAAG;MAC1B,oBAAOd,OAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IACxB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAChB,EAAA,CAhBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}