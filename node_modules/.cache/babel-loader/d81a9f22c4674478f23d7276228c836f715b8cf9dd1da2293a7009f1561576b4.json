{"ast":null,"code":"var _jsxFileName = \"/Users/salmaelkasri/Desktop/postapp/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  let navigate = useNavigate();\n  const {\n    authState\n  } = useContext(AuthContext);\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3004/posts\").then(response => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  const deletePost = postId => {\n    axios.delete(`http://localhost:3004/posts/${postId}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.filter(val => {\n        return val.id !== postId;\n      }));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return (\n    /*#__PURE__*/\n    //你看这是JSX code the return of divs in javascript code\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: [...listOfPosts].reverse().map((value, key) => {\n        return (\n          /*#__PURE__*/\n          //basic html code\n          _jsxDEV(\"div\", {\n            className: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upperPost\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postData\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title\",\n                  children: value.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"username\",\n                  children: value.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    navigate(`/post/${value.id}`);\n                  },\n                  children: \"See Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  as: \"a\",\n                  variant: \"primary\",\n                  children: \"Button as link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postText\",\n              children: value.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: value.createdAt.slice(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), authState.username === value.username && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deletePost(value.id);\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Home, \"IH/T8mseT28HaecHRJRKXuxjP9I=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","axios","useEffect","useState","useNavigate","useContext","AuthContext","Button","jsxDEV","_jsxDEV","Home","_s","navigate","authState","listOfPosts","setListOfPosts","get","then","response","data","deletePost","postId","delete","headers","accessToken","localStorage","getItem","filter","val","id","catch","error","console","log","className","children","reverse","map","value","key","fileName","_jsxFileName","lineNumber","columnNumber","title","username","onClick","as","variant","postText","createdAt","slice","_c","$RefreshReg$"],"sources":["/Users/salmaelkasri/Desktop/postapp/client/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { Button } from 'react-bootstrap';\nfunction Home() {\n  let navigate = useNavigate();\n  const { authState } = useContext(AuthContext);\n  //listOfPosts is var that holds the current value of the state,starts as an empty array'[]'\n  //setListOfPosts is a function you can use to update the 'listOfPosts' value\n  const [listOfPosts, setListOfPosts] = useState([]);\n  useEffect(() => {\n    //Running the logic we want to pass after refreshing\n    //using axios to run a getRequest that you can see in insomnia\n    axios.get(\"http://localhost:3004/posts\").then((response) => {\n      setListOfPosts(response.data);\n    });\n  }, []);\n  const deletePost = (postId) => {\n    axios\n      .delete(`http://localhost:3004/posts/${postId}`, {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then((response) => {\n        setListOfPosts(\n          listOfPosts.filter((val) => {\n            return val.id !== postId;\n          })\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return (\n    //你看这是JSX code the return of divs in javascript code\n    <div className=\"container\">\n      {[...listOfPosts].reverse().map((value, key) => {\n        return (\n          //basic html code\n          <div className=\"post\">\n            <div className=\"upperPost\">\n              <div>\n                <span className=\"image\"></span>\n              </div>\n              <div className=\"postData\">\n                <div className=\"title\">{value.title}</div>\n                <div className=\"username\">{value.username}</div>\n                <Button\n                  onClick={() => {\n                    navigate(`/post/${value.id}`);\n                  }}\n                >\n                  See Post\n                </Button>\n                <Button as=\"a\" variant=\"primary\">\n    Button as link\n  </Button>\n              </div>\n            </div>\n            <div className=\"postText\">{value.postText}</div>\n            <div className=\"time\">{value.createdAt.slice(0, 10)}</div>\n            {authState.username === value.username && (\n              <button\n                onClick={() => {\n                  deletePost(value.id);\n                }}\n              >\n                X\n              </button>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}